{
  "version": 3,
  "sources": ["../../src/index.ts", "../../src/common.ts", "../../src/validate.ts", "../../src/oembed.ts", "../../src/linkReplace.ts", "../../src/textReplace.ts"],
  "sourcesContent": ["import { linkReplace } from './linkReplace';\nimport { oembed, gifEmbed } from './oembed';\nimport { textReplace } from './textReplace';\nimport validate from './validate';\n\nexport { oembed, gifEmbed, linkReplace, textReplace, validate };\n", "const LOOM_BASE_REGEX_STR =\n  '(?:https?://)?((?:stage.loom.com|loom.com|www.loom.com|loomlocal.com:4444)/share/([a-zA-Z0-9-]*-)?[a-f0-9]+)(\\\\?[a-zA-Z0-9=&-_]+)?';\n\nexport const LOOM_URL_REGEX = new RegExp(`^${LOOM_BASE_REGEX_STR}$`);\nexport const LOOM_URL_MATCH_REGEX = new RegExp(`${LOOM_BASE_REGEX_STR}`, 'g');\nexport const LOOM_HOSTNAME_CAPTURE =\n  /(www\\.loom\\.com|loom\\.com|stage\\.loom\\.com|loomlocal\\.com:4444)/i;\n\nexport const LINK_REPLACED_CLASS = 'lo-link-replaced';\n", "import { LINK_REPLACED_CLASS, LOOM_URL_REGEX } from './common';\n\nexport const isLoomUrl = (url: string): boolean => LOOM_URL_REGEX.test(url);\n\nexport const isValidEmbedUrl = (url: string): boolean => isLoomUrl(url);\n\nexport const isValidLinkNode = (node: HTMLAnchorElement): boolean =>\n  !node.className.includes(LINK_REPLACED_CLASS) && isValidEmbedUrl(node.href);\n\nexport default {\n  isLoomUrl,\n};\n", "import { LOOM_HOSTNAME_CAPTURE } from './common';\nimport { isValidEmbedUrl } from './validate';\n\nconst SRC_URL_REGEX = /src=[\"']+(https?:\\/\\/[a-zA-z\\d:./?&]+)/;\n\nconst getResponsiveEmbedCode = (\n  embedURL: string,\n  heightAspectRatio: number\n): string => {\n  const padding = `${heightAspectRatio * 100}%`;\n  const wrapperStyles = `position: relative; padding-bottom: ${padding}; height: 0;`;\n  const iframeStyles =\n    'position: absolute; top: 0; left: 0; width: 100%; height: 100%;';\n  const staticAttributes =\n    'frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen';\n\n  return `\n<div class=\"lo-emb-vid\" style=\"${wrapperStyles}\">\n  <iframe src=\"${embedURL}\" style=\"${iframeStyles}\" ${staticAttributes}></iframe>\n</div>`\n    .split('\\n')\n    .map(s => s.trim())\n    .join('');\n};\n\nconst chooseAspectRatio = (data: OEmbedInterface) => {\n  const { width, height } = data;\n\n  // Fallback to 16:9 ratio when width or height is null\n  if (width == null || height == null) {\n    return 1080 / 1920;\n  }\n\n  return height / width;\n};\n\nconst enhanceEmbedCode = (\n  videoData: OEmbedInterface,\n  options: Option\n): OEmbedInterface => {\n  // If needed, we alter the embed code to\n  // support responsive code\n  const { width, height } = options;\n\n  if (!width && !height) {\n    const [, embedUrl] = <RegExpMatchArray>videoData.html.match(SRC_URL_REGEX);\n    const aspectRatio = chooseAspectRatio(videoData);\n\n    return {\n      ...videoData,\n      html: getResponsiveEmbedCode(embedUrl, aspectRatio),\n    };\n  }\n\n  return videoData;\n};\n\ninterface Option {\n  width?: number;\n  height?: number;\n  gifThumbnail?: boolean; // If true, the thumbnail will be a gif instead of a jpeg\n  hideOwner?: boolean; // If true, the video owner will be hidden, and the video link will not be clickable\n}\n\ninterface OEmbedInterface {\n  type: 'video';\n  html: string;\n  title: string;\n  height: number | null;\n  width: number | null;\n  provider_name: 'Loom';\n  provider_url: string;\n  thumbnail_height: number;\n  thumbnail_width: number;\n  thumbnail_url: string;\n  duration: number;\n}\n\nconst buildLoomOembedUrl = (url: string, options: Option): string => {\n  const { width, height, gifThumbnail, hideOwner } = options;\n  const maxWidth = width ? `&maxwidth=${width}` : '';\n  const maxHeight = height ? `&maxheight=${height}` : '';\n  const gifParam = gifThumbnail ? `&gif=${gifThumbnail}` : '';\n  const ownerParam = hideOwner ? `&hide_owner=${hideOwner}` : '';\n\n  const [loomDomain] = <RegExpMatchArray>url.match(LOOM_HOSTNAME_CAPTURE);\n\n  let loomBaseDomain = loomDomain;\n\n  if (loomDomain === 'loom.com') {\n    loomBaseDomain = `www.${loomDomain}`;\n  }\n\n  return `https://${loomBaseDomain}/v1/oembed?url=${url}${maxWidth}${maxHeight}${gifParam}${ownerParam}`;\n};\n\nconst oembed = (\n  linkUrl: string,\n  options: Option = {}\n): Promise<OEmbedInterface> => {\n  const isSupportedUrl = isValidEmbedUrl(linkUrl);\n\n  if (isSupportedUrl) {\n    return fetch(buildLoomOembedUrl(linkUrl, options))\n      .then(resp => resp.json())\n      .then(videoData => enhanceEmbedCode(videoData, options))\n      .catch(e => {\n        throw new Error('Unable to fetch oembed data:' + e);\n      });\n  }\n\n  throw new Error('URL is not from a supported video provider');\n};\n\nconst gifEmbed = async (linkUrl: string): Promise<string> => {\n  const oEmbed = await oembed(linkUrl, { gifThumbnail: true });\n\n  return `<a href=\"${linkUrl}\">\n    <img style=\"max-width:300px;\" src=\"${oEmbed.thumbnail_url}\">\n  </a>`;\n};\n\nexport { oembed, gifEmbed };\nexport type { OEmbedInterface, Option };\n", "import { LINK_REPLACED_CLASS } from './common';\nimport { oembed } from './oembed';\nimport { isValidLinkNode } from './validate';\n\nconst createNodeFromString = (htmlString: string): ChildNode | null => {\n  const containerNode = document.createElement('div');\n\n  containerNode.innerHTML = htmlString;\n\n  return containerNode.firstChild;\n};\n\nconst injectVideo = (linkNode: ChildNode, embedString: string): void => {\n  const embedNode = createNodeFromString(embedString);\n\n  if (embedNode && linkNode.parentNode) {\n    linkNode.parentNode.insertBefore(embedNode, linkNode);\n  }\n};\n\nconst linkReplace = (\n  selector = 'a',\n  options = {},\n  target: Document = document\n): void => {\n  const linkNodes = <[HTMLAnchorElement]>[\n    ...Array.from(target.querySelectorAll(selector)),\n  ];\n\n  linkNodes\n    .filter(item => isValidLinkNode(item))\n    .forEach(async node => {\n      const { html } = await oembed(node.href, options);\n\n      injectVideo(node, html);\n\n      node.className = `${node.className} ${LINK_REPLACED_CLASS}`;\n\n      return true;\n    });\n};\n\nexport { linkReplace };\n", "import { LOOM_URL_MATCH_REGEX, LOOM_URL_REGEX } from './common';\n\nimport { oembed, Option } from './oembed';\n\nconst normalizeUrls = (url: string) => {\n  const [, loomBaseUrl] = <RegExpMatchArray>url.match(LOOM_URL_REGEX);\n\n  return {\n    originalUrl: url,\n    requestUrl: `https://${loomBaseUrl}`,\n  };\n};\n\nconst textReplace = async (\n  textString: string,\n  options: Option = {}\n): Promise<string> => {\n  const textInput = textString || '';\n\n  const loomMatches = textInput.match(LOOM_URL_MATCH_REGEX);\n\n  if (!loomMatches) {\n    return textInput;\n  }\n\n  const embedPromises = loomMatches.map(normalizeUrls).map(async urls => {\n    const { html } = await oembed(urls.requestUrl, options);\n\n    return {\n      ...urls,\n      embedCode: html,\n    };\n  });\n\n  const embedData = await Promise.all(embedPromises);\n\n  return embedData.reduce((acc: string, curr) => {\n    const { originalUrl, embedCode } = curr;\n    const urlReplaceRegex = new RegExp(originalUrl, 'g');\n\n    return acc.replace(urlReplaceRegex, embedCode);\n  }, textInput);\n};\n\nexport { textReplace };\n"],
  "mappings": "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",
  "names": []
}
